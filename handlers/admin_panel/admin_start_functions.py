from aiogram import F, types, Router
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession

from database.orm_query import orm_delete_cinema_by_code, orm_add_cinema_by_code, orm_get_all_cinemas
from filter.chat_types import ChatTypeFilter, IsAdmin
from message_text.text import messages

admin_start_functions_private_router = Router()
admin_start_functions_private_router.message.filter(ChatTypeFilter(['private']), IsAdmin())


class CinemaStates(StatesGroup):
    waiting_for_cinema_code = State()
    waiting_for_cinema_name = State()
    waiting_for_cinema_delete = State()


def admin_start_functions_keyboard():
    keyboard = InlineKeyboardBuilder()
    add_cinema_button = InlineKeyboardButton(
        text='–î–æ–±–∞–≤–∏—Ç—å –ö–∏–Ω–æ code', callback_data='add_cinema_code'
    )
    delete_cinema_button = InlineKeyboardButton(
        text='–£–¥–∞–ª–∏—Ç—å –ö–∏–Ω–æ code', callback_data='delete_cinema_code'
    )
    keyboard.row(add_cinema_button)
    keyboard.row(delete_cinema_button)
    keyboard.add(
        InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ –∫–∏–Ω–æ code", callback_data='list_cinema_code')
    )
    keyboard.add(
        InlineKeyboardButton(text="üì¢–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ", callback_data="send_message")
    )

    return keyboard.adjust(2).as_markup()


def return_admin_start_functions_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ", callback_data='admin_start')
    )

    return keyboard.adjust(1).as_markup()


async def send_welcome_message(user, target, photo_path='media/images/img_1.png'):
    welcome_text = (
        f"{user.full_name}! üòä\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–¥–µ–ª –±–æ—Ç–∞.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
    )
    keyboard_markup = admin_start_functions_keyboard()
    await target.answer_photo(
        photo=types.FSInputFile(photo_path),
        caption=welcome_text,
        reply_markup=keyboard_markup
    )


@admin_start_functions_private_router.message(
    F.text.lower().contains('admin_start') | (F.text.lower() == 'admin_start'))
async def start_cmd(message: types.Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin_start"""
    await send_welcome_message(message.from_user, message)


@admin_start_functions_private_router.callback_query(F.data.startswith('admin_start'))
async def start_command_callback_query(query: types.CallbackQuery, session: AsyncSession) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query —Å –∫–æ–º–∞–Ω–¥–æ–π admin_start"""
    await query.message.delete()
    await send_welcome_message(query.from_user, query.message)


@admin_start_functions_private_router.callback_query(F.data == 'list_cinema_code')
async def list_cinema_code_callback_query(query: types.CallbackQuery, session: AsyncSession) -> None:
    await query.message.delete()
    list_cinema_code = await orm_get_all_cinemas(session)
    if list_cinema_code:
        cinema_list_text = "üé¨ *–°–ø–∏—Å–æ–∫ –∫–∏–Ω–æ –∫–æ–¥–æ–≤:*\n\n"  # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        for cinema in list_cinema_code:
            cinema_list_text += f"üìΩÔ∏è –ö–æ–¥: `{cinema.cinema_code}` - –ù–∞–∑–≤–∞–Ω–∏–µ: *{cinema.cinema_name}*\n"
    else:
        cinema_list_text = "‚ùå *–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤.*"

    await query.message.answer(text=cinema_list_text, parse_mode=ParseMode.MARKDOWN,
                               reply_markup=return_admin_start_functions_keyboard())


@admin_start_functions_private_router.callback_query(F.data.startswith('add_cinema_code'))
async def add_cinema_code_callback(query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä'"""
    await query.message.delete()
    await query.answer()
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞"
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_add")
    )
    await query.message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–∏–Ω–æ:",reply_markup=keyboard.as_markup())
    await state.set_state(CinemaStates.waiting_for_cinema_code)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
@admin_start_functions_private_router.message(CinemaStates.waiting_for_cinema_code)
async def process_cinema_code(message: types.Message, state: FSMContext):
    cinema_code = message.text.strip()

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞"
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_add")
    )

    await state.update_data(cinema_code=cinema_code)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∏–Ω–æ:", reply_markup=keyboard.as_markup())
    await state.set_state(CinemaStates.waiting_for_cinema_name)


@admin_start_functions_private_router.message(CinemaStates.waiting_for_cinema_name)
async def process_cinema_name(message: types.Message, state: FSMContext, session: AsyncSession):
    cinema_name = message.text.strip()
    data = await state.get_data()
    cinema_code = data.get('cinema_code')

    try:
        new_cinema = await orm_add_cinema_by_code(session, cinema_code, cinema_name)

        if new_cinema:
            await message.answer(
                f"–ö–∏–Ω–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:\n–ö–æ–¥: {new_cinema.cinema_code}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {new_cinema.cinema_name}",reply_markup=return_admin_start_functions_keyboard()
            )
        else:
            await message.answer("–û—à–∏–±–∫–∞: –ö–∏–Ω–æ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.",
                                 reply_markup=return_admin_start_functions_keyboard())
    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∏–Ω–æ: {str(e)}")

    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞" –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞
@admin_start_functions_private_router.callback_query(F.data == 'cancel_add')
async def cancel_add_callback(query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞"""
    await query.message.delete()
    await query.message.answer("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",reply_markup=return_admin_start_functions_keyboard())
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Callback Query –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞
@admin_start_functions_private_router.callback_query(F.data.startswith('delete_cinema_code'))
async def delete_cinema_code_callback(query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–£–¥–∞–ª–∏—Ç—å –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä'"""
    await query.message.delete()
    await query.answer()

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞"
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete")
    )

    await query.message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–∏–Ω–æ, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:", reply_markup=keyboard.as_markup())
    await state.set_state(CinemaStates.waiting_for_cinema_delete)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
@admin_start_functions_private_router.callback_query(F.data == 'cancel_delete')
async def cancel_delete_callback(query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞"""
    await query.message.delete()
    await query.message.answer("–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                               reply_markup=return_admin_start_functions_keyboard())
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
@admin_start_functions_private_router.message(CinemaStates.waiting_for_cinema_delete)
async def process_delete_cinema_code(message: types.Message, state: FSMContext, session: AsyncSession):
    cinema_code = message.text.strip()

    if cinema_code.lower() == "–æ—Ç–º–µ–Ω–∞":
        await message.answer('–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.',reply_markup=return_admin_start_functions_keyboard())
        await state.clear()
    else:
        deleted_count = await orm_delete_cinema_by_code(session, cinema_code)

        if deleted_count:
            await message.answer(f"–ö–∏–Ω–æ —Å –∫–æ–¥–æ–º {cinema_code} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.",
                                 reply_markup=return_admin_start_functions_keyboard())
        else:
            await message.answer("–ö–∏–Ω–æ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.",reply_markup=return_admin_start_functions_keyboard())

        await state.clear()

